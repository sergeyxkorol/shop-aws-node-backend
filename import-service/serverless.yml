service: shop-aws-node-import-service
frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:REGION}
  profile: default

  environment:
    SQS_URL:
      Ref: catalogItemsQueue

  httpApi:
    cors: true
  logs:
    httpApi: true
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:ListBucket"
          Resource:
            - arn:aws:s3:::${env:BUCKET}
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource:
            - arn:aws:s3:::${env:BUCKET}/*
        - Effect: "Allow"
          Action:
            - "sqs:*"
          Resource:
            - Fn::GetAtt: [catalogItemsQueue, Arn]
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:PutItem
          Resource:
            - arn:aws:dynamodb:us-east-1:714262839161:table/products-shop-aws-node-backend-dev

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${env:SQS_QUEUE_NAME}

functions:
  importProductsFile:
    handler: functions/index.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: functions/index.importFileParser
    events:
      - s3:
          bucket: ${env:BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: functions/index.catalogBatchProcess
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn
          batchSize: 5

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    target: "node18"
